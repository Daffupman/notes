<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.daff.notes.mapper.ContentMapper">
  <resultMap id="BaseResultMap" type="io.daff.notes.entity.po.Content">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from content
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.daff.notes.entity.po.Content">
    insert into content (id, content)
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="io.daff.notes.entity.po.Content">
    update content
    set content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, content
    from content
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, content
    from content
  </select>
  <sql id="baseSelectFields">
    id, content
  </sql>
  <insert id="batchInsert" keyProperty="id" useGeneratedKeys="true">
    insert into content(
	  <trim suffixOverrides=",">
		<if test="collection[0].id != null">id,</if>
		<if test="collection[0].content != null">content,</if>
	  </trim>
	)
	values
	<foreach collection="list" item="item" separator=",">
	(
	  <trim suffixOverrides=",">
		<if test="item.id != null">#{item.id},</if>
		<if test="item.content != null">#{item.content},</if>
	  </trim>
	)
	</foreach>
  </insert>
  <delete id="deleteByIds">
    delete from content
	where id
	  <foreach collection="collection" item="item" open="in (" close=")" separator=",">
		#{item}
	  </foreach>
  </delete>
  <select id="select" resultMap="BaseResultMap">
    select <include refid="baseSelectFields"/>
	from content
	<where>
	  <trim suffixOverrides=",">
	  </trim>
	</where>
  </select>
  <select id="selectByIds" resultMap="BaseResultMap">
    select	<include refid="baseSelectFields"/>
	from content
	where id
		<foreach collection="collection" item="item" open="in (" close=")" separator=",">
			#{item}
		</foreach>
  </select>
  <update id="batchUpdate">
    <foreach collection="list" item="item" separator=",">
			update content
			set
			<trim suffixOverrides=",">
	    <if test="collection[0].content != null">content = #{item.content},</if>
			</trim>
			where id = #{item.id}
		</foreach>
  </update>
</mapper>